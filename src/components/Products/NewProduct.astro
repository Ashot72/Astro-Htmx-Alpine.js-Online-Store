---
import type { Product } from "@prisma/client";

interface Props {
    catId: string;
    open: boolean;
    errors?: {
        name?: string[];
        description?: string[];
        price?: string[];
        count?: string[];
        picture?: string[];
        form?: string[];
    };
    data?: Product;
}

const { open, errors, data, catId } = Astro.props;
---

<div
    id="newProductDiv"
    x-data={`{edit:${open}}`}
    x-init={`$watch('edit', value => { 
    if(edit) {
        htmx.process(document.querySelector('#newProduct'))
    } 
  })`}
>
    <template x-if="edit" id="prod-template">
        <div>
            <div
                id="modal-backdrop"
                class="modal-backdrop fade show"
                style="display:block;"
            >
            </div>
            <div
                id="modal"
                class="modal fade show"
                tabindex="-1"
                style="display:block;"
            >
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">New Product</h5>
                        </div>
                        <div class="modal-body">
                            <form
                                hx-disabled-elt="#prod-btn, #cancel-btn"
                                class="mx-1 mx-md-4"
                                hx-post="/products/new"
                                hx-indicator="#prod-btn"
                                hx-swap="multi:#newProductDiv:outerHTML,#prodTable:outerHTML"
                                id="newProduct"
                            >
                                <input
                                    type="hidden"
                                    name="catId"
                                    value={catId}
                                />
                                <input
                                    type="hidden"
                                    id="picture"
                                    name="picture"
                                    value={data?.picture}
                                />
                                <div
                                    class="d-flex flex-row align-items-center mb-4"
                                >
                                    <div class="form-outline flex-fill mb-0">
                                        {
                                            errors && errors.form && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.form.join(", ")}
                                                </div>
                                            )
                                        }
                                        {
                                            errors && errors.name && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.name.join(", ")}
                                                </div>
                                            )
                                        }
                                        <input
                                            x-init="$el.focus()"
                                            required
                                            type="text"
                                            id="name"
                                            name="name"
                                            placeholder="Name"
                                            class="form-control"
                                            @keydown.escape={`edit=false`}
                                            value={data?.name}
                                        />
                                    </div>
                                </div>
                                <div
                                    class="d-flex flex-row align-items-center mb-4"
                                >
                                    <div class="form-outline flex-fill mb-0">
                                        {
                                            errors && errors.description && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.description.join(
                                                        ", ",
                                                    )}
                                                </div>
                                            )
                                        }
                                        <textarea
                                            required
                                            id="description"
                                            name="description"
                                            placeholder="Description"
                                            rows="4"
                                            class="form-control"
                                            @keydown.escape={`edit=false`}
                                            >{data?.description}</textarea
                                        >
                                    </div>
                                </div>
                                <div
                                    class="d-flex flex-row align-items-center mb-4"
                                >
                                    <div class="form-outline flex-fill mb-0">
                                        {
                                            errors && errors.price && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.price.join(", ")}
                                                </div>
                                            )
                                        }
                                        <input
                                            required
                                            type="text"
                                            id="price"
                                            name="price"
                                            placeholder="Price"
                                            class="form-control"
                                            @keydown.escape={`edit=false`}
                                            value={data?.price}
                                        />
                                    </div>
                                </div>
                                <div
                                    class="d-flex flex-row align-items-center mb-4"
                                >
                                    <div class="form-outline flex-fill mb-0">
                                        {
                                            errors && errors.count && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.count.join(", ")}
                                                </div>
                                            )
                                        }
                                        <input
                                            required
                                            type="text"
                                            id="count"
                                            name="count"
                                            placeholder="Count"
                                            class="form-control"
                                            @keydown.escape={`edit=false`}
                                            value={data?.count}
                                        />
                                    </div>
                                </div>

                                <div
                                    class="d-flex flex-row align-items-center mb-4"
                                >
                                    <div class="form-outline flex-fill mb-0">
                                        {
                                            errors && errors.picture && (
                                                <div
                                                    class="alert alert-danger"
                                                    role="alert"
                                                >
                                                    {errors.picture.join(", ")}
                                                </div>
                                            )
                                        }
                                        <input
                                            type="file"
                                            id="image"
                                            name="image"
                                            placeholder="Image"
                                            class="form-control"
                                            accept="image/png, image/jpeg"
                                            onchange="getImage(event)"
                                        />
                                    </div>
                                </div>
                                <div style={{ textAlign: "center" }}>
                                    <img
                                        id="base64"
                                        style={{ maxWidth: "420px" }}
                                        src={data?.picture}
                                    />
                                </div>
                                <div class="modal-footer">
                                    <button
                                        id="prod-btn"
                                        type="submit"
                                        class="btn btn-primary"
                                    >
                                        <span class="btn-content"
                                            >Add Product</span
                                        >
                                        <span class="htmx-indicator"
                                            >Wait...</span
                                        >
                                    </button>
                                    <button
                                        @click="reset();edit=false"
                                        id="cancel-btn"
                                        type="button"
                                        class="btn btn-secondary"
                                    >
                                        Cancel
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </template>
    <h6 class="p-2">
        <button
            @click="edit=true"
            type="button"
            class="btn btn-link text-decoration-none"
        >
            Add Product
        </button>
    </h6>

    <script is:inline>
        function reset() {
            const template = document.getElementById("prod-template");
            const fields = ["name", "description", "price", "count", "picture"];

            fields.forEach((field) => {
                document.getElementById(field).value = "";
                template.content.getElementById(field).value = "";
            });

            document.getElementById("base64").src = "";
            template.content.getElementById("base64").src = "";

            const alerts = document.querySelectorAll(".alert-danger");
            alerts.forEach((alert) => alert.remove());

            const templateAlerts =
                template.content.querySelectorAll(".alert-danger");
            templateAlerts.forEach((alert) => alert.remove());
        }

        const getImage = (e) => {
            const file = e.target.files[0];
            const reader = new FileReader();
            reader.addEventListener(
                "load",
                () => {
                    const result = reader.result;

                    document.getElementById("base64").src = result;
                    document.getElementById("picture").value = result;
                },
                false,
            );

            if (file) {
                reader.readAsDataURL(file);
            }
        };
    </script>
</div>
