---
import { z } from "zod";
import type { Product } from "@prisma/client";
import EditProduct from "../../../components/Products/EditProduct.astro";
import { getProduct } from "../../../server/products";

const userId = Astro.locals.userId;
if (!userId) {
  return Astro.redirect("/");
}

const htmx = !!Astro.request.headers.get("HX-Request");

if (Astro.request.method !== "GET" || !htmx) {
  return Astro.redirect("/");
}

const { id } = Astro.params;

let data: Product, errors;

async function updateProduct() {
  if (!id) {
    errors = { form: ["Bad Request"] };
    return;
  }

  try {
    const { name, description, price, count, picture, categoryId } =
      await getProduct(id);

    data = {
      name,
      description,
      price,
      count,
      picture,
      categoryId,
    } as Product;

    const result = z
      .object({
        name: z.string().min(5),
        description: z.string().min(10),
        price: z.coerce
          .number()
          .gt(0, "Must be positive number")
          .multipleOf(0.01, "Must have a maximum of two decimal places"),
        count: z.coerce.number().gt(0, "Must be positive number").int(),
        picture: z.string().min(1, "Must upload an image").trim(),
      })
      .safeParse({ name, description, price, count, picture });

    if (!result.success) {
      errors = result.error.flatten().fieldErrors;
      return;
    }
  } catch (e) {
    errors = { form: [e.message] };
    return;
  }
}

await updateProduct();

export const partial = true;
---

<EditProduct {id} {errors} {data} />
