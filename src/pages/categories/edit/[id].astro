---
import { z } from "zod";
import type { Category } from "@prisma/client";
import EditCategory from "../../../components/Categories/EditCategory.astro";
import { getCategory } from "../../../server/categories";

if (!Astro.locals.userId) {
  return Astro.redirect("/");
}

const htmx = !!Astro.request.headers.get("HX-Request");

if (Astro.request.method !== "GET" || !htmx) {
  return Astro.redirect("/");
}

const { id } = Astro.params;

let data: Category, errors;

async function updateCategory() {
  if (!id) {
    errors = { form: ["Bad Request"] };
    return;
  }

  try {
    const { name, description } = await getCategory(id);

    data = {
      name,
      description,
    } as Category;

    const result = z
      .object({
        name: z
          .string()
          .min(4)
          .regex(/^[a-zA-Z\s\&]*$/, "Must be letters, spaces and ampersands")
          .trim(),
        description: z.string().min(10).trim(),
      })
      .safeParse({ name, description });

    if (!result.success) {
      errors = result.error.flatten().fieldErrors;
      return;
    }
  } catch (e) {
    errors = { form: [e.message] };
    return;
  }
}

await updateCategory();

export const partial = true;
---

<EditCategory {id} {errors} {data} />
